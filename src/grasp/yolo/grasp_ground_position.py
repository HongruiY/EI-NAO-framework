import qi
import sys
def make_nao_sit(session):
    """
    让NAO机器人坐下
    """
    posture_service = session.service("ALRobotPosture")
    
    posture_service.goToPosture("Sit", 0.9)


def make_nao_grasp(session):
    """
    让NAO机器人抓球
    """
    names = list()
    times = list()
    keys = list()

    names.append("HeadPitch")
    times.append([0.4, 1.64, 3, 4.28, 5.52, 8.16])
    keys.append([[-0.0291878, [3, -0.146667, 0], [3, 0.413333, 0]], [-0.0107799, [3, -0.413333, -0.018408], [3, 0.453333, 0.0201894]], [0.519984, [3, -0.453333, 0], [3, 0.426667, 0]], [0.519984, [3, -0.426667, 0], [3, 0.413333, 0]], [0.519984, [3, -0.413333, 0], [3, 0.88, 0]], [-0.0107799, [3, -0.88, 0], [3, 0, 0]]])

    names.append("HeadYaw")
    times.append([0.4, 1.64, 3, 4.28, 5.52, 8.16])
    keys.append([[-0.0153821, [3, -0.146667, 0], [3, 0.413333, 0]], [-0.032256, [3, -0.413333, 0], [3, 0.453333, 0]], [-0.0291878, [3, -0.453333, 0], [3, 0.426667, 0]], [-0.0291878, [3, -0.426667, 0], [3, 0.413333, 0]], [-0.0291878, [3, -0.413333, 0], [3, 0.88, 0]], [-0.032256, [3, -0.88, 0], [3, 0, 0]]])

    names.append("LAnklePitch")
    times.append([0.4, 1.64, 3, 4.28, 5.52, 8.16])
    keys.append([[0.834454, [3, -0.146667, 0], [3, 0.413333, 0]], [0.829852, [3, -0.413333, 0], [3, 0.453333, 0]], [0.85593, [3, -0.453333, 0], [3, 0.426667, 0]], [0.85593, [3, -0.426667, 0], [3, 0.413333, 0]], [0.85593, [3, -0.413333, 0], [3, 0.88, 0]], [0.829852, [3, -0.88, 0], [3, 0, 0]]])

    names.append("LAnkleRoll")
    times.append([0.4, 1.64, 3, 4.28, 5.52, 8.16])
    keys.append([[-0.00762796, [3, -0.146667, 0], [3, 0.413333, 0]], [-0.00609397, [3, -0.413333, -0.00153399], [3, 0.453333, 0.00168244]], [0.0552659, [3, -0.453333, 0], [3, 0.426667, 0]], [0.0552659, [3, -0.426667, 0], [3, 0.413333, 0]], [0.0552659, [3, -0.413333, 0], [3, 0.88, 0]], [-0.00609397, [3, -0.88, 0], [3, 0, 0]]])

    names.append("LElbowRoll")
    times.append([0.4, 0.84, 1.64, 3, 4.28, 5.52, 8.16])
    keys.append([[-1.19341, [3, -0.146667, 0], [3, 0.146667, 0]], [-1.19034, [3, -0.146667, -0.00163312], [3, 0.266667, 0.00296931]], [-1.1796, [3, -0.266667, 0], [3, 0.453333, 0]], [-1.26551, [3, -0.453333, 0], [3, 0.426667, 0]], [-1.26551, [3, -0.426667, 0], [3, 0.413333, 0]], [-1.26551, [3, -0.413333, 0], [3, 0.88, 0]], [-1.1796, [3, -0.88, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append([0.4, 0.84, 1.64, 3, 4.28, 5.52, 8.16])
    keys.append([[-0.458707, [3, -0.146667, 0], [3, 0.146667, 0]], [-0.454105, [3, -0.146667, 0], [3, 0.266667, 0]], [-0.454105, [3, -0.266667, 0], [3, 0.453333, 0]], [-0.47865, [3, -0.453333, 0], [3, 0.426667, 0]], [-0.47865, [3, -0.426667, 0], [3, 0.413333, 0]], [-0.47865, [3, -0.413333, 0], [3, 0.88, 0]], [-0.454105, [3, -0.88, 0], [3, 0, 0]]])

    names.append("LHand")
    times.append([0.4, 0.84, 1.64, 3, 4.28, 5.52, 8.16])
    keys.append([[0.2892, [3, -0.146667, 0], [3, 0.146667, 0]], [0.2888, [3, -0.146667, 0], [3, 0.266667, 0]], [0.2888, [3, -0.266667, 0], [3, 0.453333, 0]], [0.2932, [3, -0.453333, 0], [3, 0.426667, 0]], [0.2932, [3, -0.426667, 0], [3, 0.413333, 0]], [0.2932, [3, -0.413333, 0], [3, 0.88, 0]], [0.2888, [3, -0.88, 0], [3, 0, 0]]])

    names.append("LHipPitch")
    times.append([0.4, 1.64, 3, 4.28, 5.52, 8.16])
    keys.append([[-1.53089, [3, -0.146667, 0], [3, 0.413333, 0]], [-1.52169, [3, -0.413333, -0.00920309], [3, 0.453333, 0.0100937]], [-1.36062, [3, -0.453333, 0], [3, 0.426667, 0]], [-1.36062, [3, -0.426667, 0], [3, 0.413333, 0]], [-1.36062, [3, -0.413333, 0], [3, 0.88, 0]], [-1.52169, [3, -0.88, 0], [3, 0, 0]]])

    names.append("LHipRoll")
    times.append([0.4, 1.64, 3, 4.28, 5.52, 8.16])
    keys.append([[0.276162, [3, -0.146667, 0], [3, 0.413333, 0]], [0.245482, [3, -0.413333, 0.0306794], [3, 0.453333, -0.0336484]], [-0.23466, [3, -0.453333, 0], [3, 0.426667, 0]], [-0.23466, [3, -0.426667, 0], [3, 0.413333, 0]], [-0.23466, [3, -0.413333, 0], [3, 0.88, 0]], [0.245482, [3, -0.88, 0], [3, 0, 0]]])

    names.append("LHipYawPitch")
    times.append([0.4, 1.64, 3, 4.28, 5.52, 8.16])
    keys.append([[-0.624296, [3, -0.146667, 0], [3, 0.413333, 0]], [-0.64884, [3, -0.413333, 0.0245446], [3, 0.453333, -0.0269198]], [-1.05228, [3, -0.453333, 0], [3, 0.426667, 0]], [-1.05228, [3, -0.426667, 0], [3, 0.413333, 0]], [-1.05228, [3, -0.413333, 0], [3, 0.88, 0]], [-0.64884, [3, -0.88, 0], [3, 0, 0]]])

    names.append("LKneePitch")
    times.append([0.4, 1.64, 3, 4.28, 5.52, 8.16])
    keys.append([[1.38669, [3, -0.146667, 0], [3, 0.413333, 0]], [1.37902, [3, -0.413333, 0.00766897], [3, 0.453333, -0.00841113]], [1.20875, [3, -0.453333, 0], [3, 0.426667, 0]], [1.20875, [3, -0.426667, 0], [3, 0.413333, 0]], [1.20875, [3, -0.413333, 0], [3, 0.88, 0]], [1.37902, [3, -0.88, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append([0.4, 0.84, 1.64, 3, 4.28, 5.52, 8.16])
    keys.append([[0.929562, [3, -0.146667, 0], [3, 0.146667, 0]], [0.915757, [3, -0.146667, 0], [3, 0.266667, 0]], [0.915757, [3, -0.266667, 0], [3, 0.453333, 0]], [0.866668, [3, -0.453333, 0], [3, 0.426667, 0]], [0.866668, [3, -0.426667, 0], [3, 0.413333, 0]], [0.866668, [3, -0.413333, 0], [3, 0.88, 0]], [0.915757, [3, -0.88, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append([0.4, 0.84, 1.64, 3, 4.28, 5.52, 8.16])
    keys.append([[0.223922, [3, -0.146667, 0], [3, 0.146667, 0]], [0.23466, [3, -0.146667, -0.00254021], [3, 0.266667, 0.00461856]], [0.245399, [3, -0.266667, 0], [3, 0.453333, 0]], [0.210117, [3, -0.453333, 0], [3, 0.426667, 0]], [0.210117, [3, -0.426667, 0], [3, 0.413333, 0]], [0.210117, [3, -0.413333, 0], [3, 0.88, 0]], [0.245399, [3, -0.88, 0], [3, 0, 0]]])

    names.append("LWristYaw")
    times.append([0.4, 0.84, 1.64, 3, 4.28, 5.52, 8.16])
    keys.append([[0.0137641, [3, -0.146667, 0], [3, 0.146667, 0]], [0.00149202, [3, -0.146667, 0], [3, 0.266667, 0]], [0.00149202, [3, -0.266667, 0], [3, 0.453333, 0]], [-0.0123138, [3, -0.453333, 0], [3, 0.426667, 0]], [-0.0123138, [3, -0.426667, 0], [3, 0.413333, 0]], [-0.0123138, [3, -0.413333, 0], [3, 0.88, 0]], [0.00149202, [3, -0.88, 0], [3, 0, 0]]])

    names.append("RAnklePitch")
    times.append([0.4, 1.64, 3, 4.28, 5.52, 8.16])
    keys.append([[0.849878, [3, -0.146667, 0], [3, 0.413333, 0]], [0.872888, [3, -0.413333, -0.0148759], [3, 0.453333, 0.0163155]], [0.943452, [3, -0.453333, 0], [3, 0.426667, 0]], [0.943452, [3, -0.426667, 0], [3, 0.413333, 0]], [0.943452, [3, -0.413333, 0], [3, 0.88, 0]], [0.872888, [3, -0.88, 0], [3, 0, 0]]])

    names.append("RAnkleRoll")
    times.append([0.4, 1.64, 3, 4.28, 5.52, 8.16])
    keys.append([[0.0138481, [3, -0.146667, 0], [3, 0.413333, 0]], [0.016916, [3, -0.413333, 0], [3, 0.453333, 0]], [0.00771189, [3, -0.453333, 0], [3, 0.426667, 0]], [0.00771189, [3, -0.426667, 0], [3, 0.413333, 0]], [0.00771189, [3, -0.413333, 0], [3, 0.88, 0]], [0.016916, [3, -0.88, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append([0.4, 0.84, 1.64, 3, 4.28, 5.52, 8.16])
    keys.append([[1.23031, [3, -0.146667, 0], [3, 0.146667, 0]], [1.19043, [3, -0.146667, 0.0335666], [3, 0.266667, -0.0610302]], [0.94652, [3, -0.266667, 0.124614], [3, 0.453333, -0.211844]], [0.181053, [3, -0.453333, 0], [3, 0.426667, 0]], [0.191792, [3, -0.426667, 0], [3, 0.413333, 0]], [0.191792, [3, -0.413333, 0], [3, 0.88, 0]], [0.94652, [3, -0.88, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append([0.4, 0.84, 1.64, 3, 4.28, 5.52, 8.16])
    keys.append([[0.507713, [3, -0.146667, 0], [3, 0.146667, 0]], [0.50311, [3, -0.146667, 0.00460244], [3, 0.266667, -0.00836808]], [0.131882, [3, -0.266667, 0], [3, 0.453333, 0]], [0.509247, [3, -0.453333, 0], [3, 0.426667, 0]], [0.486237, [3, -0.426667, 0], [3, 0.413333, 0]], [0.486237, [3, -0.413333, 0], [3, 0.88, 0]], [0.131882, [3, -0.88, 0], [3, 0, 0]]])

    names.append("RHand")
    times.append([0.4, 0.84, 1.64, 3, 4.28, 5.52, 6.72, 8.16])
    keys.append([[0.296, [3, -0.146667, 0], [3, 0.146667, 0]], [0.9956, [3, -0.146667, 0], [3, 0.266667, 0]], [0.9956, [3, -0.266667, 0], [3, 0.453333, 0]], [0.9924, [3, -0.453333, 0], [3, 0.426667, 0]], [0.9924, [3, -0.426667, 0], [3, 0.413333, 0]], [0, [3, -0.413333, 0], [3, 0.4, 0]], [0, [3, -0.4, 0], [3, 0.48, 0]], [0, [3, -0.48, 0], [3, 0, 0]]])

    names.append("RHipPitch")
    times.append([0.4, 1.64, 3, 4.28, 5.52, 8.16])
    keys.append([[-1.5187, [3, -0.146667, 0], [3, 0.413333, 0]], [-1.52024, [3, -0.413333, 0.00153425], [3, 0.453333, -0.00168272]], [-1.53864, [3, -0.453333, 0], [3, 0.426667, 0]], [-1.53864, [3, -0.426667, 0], [3, 0.413333, 0]], [-1.53864, [3, -0.413333, 0], [3, 0.88, 0]], [-1.52024, [3, -0.88, 0], [3, 0, 0]]])

    names.append("RHipRoll")
    times.append([0.4, 1.64, 3, 4.28, 5.52, 8.16])
    keys.append([[-0.277612, [3, -0.146667, 0], [3, 0.413333, 0]], [-0.283749, [3, -0.413333, 0.00613659], [3, 0.453333, -0.00673045]], [-0.392662, [3, -0.453333, 0], [3, 0.426667, 0]], [-0.392662, [3, -0.426667, 0], [3, 0.413333, 0]], [-0.392662, [3, -0.413333, 0], [3, 0.88, 0]], [-0.283749, [3, -0.88, 0], [3, 0, 0]]])

    names.append("RHipYawPitch")
    times.append([0.4, 1.64, 3, 4.28, 5.52, 8.16])
    keys.append([[-0.624296, [3, -0.146667, 0], [3, 0.413333, 0]], [-0.64884, [3, -0.413333, 0.0245446], [3, 0.453333, -0.0269198]], [-1.05228, [3, -0.453333, 0], [3, 0.426667, 0]], [-1.05228, [3, -0.426667, 0], [3, 0.413333, 0]], [-1.05228, [3, -0.413333, 0], [3, 0.88, 0]], [-0.64884, [3, -0.88, 0], [3, 0, 0]]])

    names.append("RKneePitch")
    times.append([0.4, 1.64, 3, 4.28, 5.52, 8.16])
    keys.append([[1.39752, [3, -0.146667, 0], [3, 0.413333, 0]], [1.34383, [3, -0.413333, 0.0536899], [3, 0.453333, -0.0588856]], [0.322183, [3, -0.453333, 0], [3, 0.426667, 0]], [0.322183, [3, -0.426667, 0], [3, 0.413333, 0]], [0.322183, [3, -0.413333, 0], [3, 0.88, 0]], [1.34383, [3, -0.88, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append([0.4, 0.84, 1.64, 3, 4.28, 5.52, 8.16])
    keys.append([[0.966462, [3, -0.146667, 0], [3, 0.146667, 0]], [0.941918, [3, -0.146667, 0.0245446], [3, 0.266667, -0.0446265]], [0.29457, [3, -0.266667, 0], [3, 0.453333, 0]], [0.533873, [3, -0.453333, -0.052683], [3, 0.426667, 0.049584]], [0.601371, [3, -0.426667, 0], [3, 0.413333, 0]], [0.601371, [3, -0.413333, 0], [3, 0.88, 0]], [0.29457, [3, -0.88, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append([0.4, 0.84, 1.64, 3, 4.28, 5.52, 8.16])
    keys.append([[-0.305309, [3, -0.146667, 0], [3, 0.146667, 0]], [-0.285367, [3, -0.146667, -0.00508041], [3, 0.266667, 0.00923711]], [-0.262356, [3, -0.266667, -0.0230104], [3, 0.453333, 0.0391177]], [0.161028, [3, -0.453333, -0.0935121], [3, 0.426667, 0.0880114]], [0.282215, [3, -0.426667, 0], [3, 0.413333, 0]], [0.282215, [3, -0.413333, 0], [3, 0.88, 0]], [-0.262356, [3, -0.88, 0], [3, 0, 0]]])

    names.append("RWristYaw")
    times.append([0.4, 0.84, 1.64, 3, 4.28, 5.52, 8.16])
    keys.append([[0.00455999, [3, -0.146667, 0], [3, 0.146667, 0]], [0.00302602, [3, -0.146667, 0.00153397], [3, 0.266667, -0.00278904]], [-0.194861, [3, -0.266667, 0.126886], [3, 0.453333, -0.215707]], [-1.02475, [3, -0.453333, 0], [3, 0.426667, 0]], [-1.02322, [3, -0.426667, 0], [3, 0.413333, 0]], [-1.02322, [3, -0.413333, 0], [3, 0.88, 0]], [-0.194861, [3, -0.88, 0], [3, 0, 0]]])

    motion_service = session.service("ALMotion")

    try:
        motion_service.angleInterpolationBezier(names, times, keys)
    except Exception as e:
        print("Error occurred during grasp motion: ", e)

def make_nao_stand(session):
    """
    让NAO机器人站起
    """
    posture_service = session.service("ALRobotPosture")
    
    posture_service.goToPosture("Stand", 1.0)


def make_nao_reached(session):
    """
    让NAO机器人伸手
    """
    names = list()
    times = list()
    keys = list()

    names.append("HeadPitch")
    times.append([0.96, 3.24, 6.16, 8.04])
    keys.append([[-0.14884, [3, -0.333333, 0], [3, 0.76, 0]], [-0.14884, [3, -0.76, 0], [3, 0.973333, 0]], [-0.14884, [3, -0.973333, 0], [3, 0.626667, 0]], [-0.14884, [3, -0.626667, 0], [3, 0, 0]]])

    names.append("HeadYaw")
    times.append([0.96, 3.24, 6.16, 8.04])
    keys.append([[0.0137641, [3, -0.333333, 0], [3, 0.76, 0]], [0.0137641, [3, -0.76, 0], [3, 0.973333, 0]], [0.0137641, [3, -0.973333, 0], [3, 0.626667, 0]], [0.0137641, [3, -0.626667, 0], [3, 0, 0]]])

    names.append("LAnklePitch")
    times.append([0.96, 3.24, 6.16, 8.04])
    keys.append([[0.0935321, [3, -0.333333, 0], [3, 0.76, 0]], [0.0919981, [3, -0.76, 0], [3, 0.973333, 0]], [0.0919981, [3, -0.973333, 0], [3, 0.626667, 0]], [0.093532, [3, -0.626667, 0], [3, 0, 0]]])

    names.append("LAnkleRoll")
    times.append([0.96, 3.24, 6.16, 8.04])
    keys.append([[-0.108872, [3, -0.333333, 0], [3, 0.76, 0]], [-0.11961, [3, -0.76, 0], [3, 0.973333, 0]], [-0.11961, [3, -0.973333, 0], [3, 0.626667, 0]], [-0.108872, [3, -0.626667, 0], [3, 0, 0]]])

    names.append("LElbowRoll")
    times.append([0.96, 3.24, 6.16, 8.04])
    keys.append([[-0.406468, [3, -0.333333, 0], [3, 0.76, 0]], [-0.39573, [3, -0.76, 0], [3, 0.973333, 0]], [-0.406468, [3, -0.973333, 0], [3, 0.626667, 0]], [-0.406468, [3, -0.626667, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append([0.96, 3.24, 6.16, 8.04])
    keys.append([[-1.17662, [3, -0.333333, 0], [3, 0.76, 0]], [-1.17662, [3, -0.76, 0], [3, 0.973333, 0]], [-1.17662, [3, -0.973333, 0], [3, 0.626667, 0]], [-1.17662, [3, -0.626667, 0], [3, 0, 0]]])

    names.append("LHand")
    times.append([0.96, 3.24, 6.16, 8.04])
    keys.append([[0.2848, [3, -0.333333, 0], [3, 0.76, 0]], [0.2848, [3, -0.76, 0], [3, 0.973333, 0]], [0.2848, [3, -0.973333, 0], [3, 0.626667, 0]], [0.2848, [3, -0.626667, 0], [3, 0, 0]]])

    names.append("LHipPitch")
    times.append([0.96, 3.24, 6.16, 8.04])
    keys.append([[0.128898, [3, -0.333333, 0], [3, 0.76, 0]], [0.128898, [3, -0.76, 0], [3, 0.973333, 0]], [0.128898, [3, -0.973333, 0], [3, 0.626667, 0]], [0.128898, [3, -0.626667, 0], [3, 0, 0]]])

    names.append("LHipRoll")
    times.append([0.96, 3.24, 6.16, 8.04])
    keys.append([[0.115092, [3, -0.333333, 0], [3, 0.76, 0]], [0.115092, [3, -0.76, 0], [3, 0.973333, 0]], [0.115092, [3, -0.973333, 0], [3, 0.626667, 0]], [0.115092, [3, -0.626667, 0], [3, 0, 0]]])

    names.append("LHipYawPitch")
    times.append([0.96, 3.24, 6.16, 8.04])
    keys.append([[-0.171766, [3, -0.333333, 0], [3, 0.76, 0]], [-0.171766, [3, -0.76, 0], [3, 0.973333, 0]], [-0.171766, [3, -0.973333, 0], [3, 0.626667, 0]], [-0.171766, [3, -0.626667, 0], [3, 0, 0]]])

    names.append("LKneePitch")
    times.append([0.96, 3.24, 6.16, 8.04])
    keys.append([[-0.101286, [3, -0.333333, 0], [3, 0.76, 0]], [-0.101286, [3, -0.76, 0], [3, 0.973333, 0]], [-0.101286, [3, -0.973333, 0], [3, 0.626667, 0]], [-0.0923279, [3, -0.626667, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append([0.96, 3.24, 6.16, 8.04])
    keys.append([[1.42965, [3, -0.333333, 0], [3, 0.76, 0]], [1.46953, [3, -0.76, 0], [3, 0.973333, 0]], [1.44192, [3, -0.973333, 0.00808757], [3, 0.626667, -0.00520706]], [1.42965, [3, -0.626667, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append([0.96, 3.24, 6.16, 8.04])
    keys.append([[0.19631, [3, -0.333333, 0], [3, 0.76, 0]], [0.171766, [3, -0.76, 0], [3, 0.973333, 0]], [0.19631, [3, -0.973333, 0], [3, 0.626667, 0]], [0.196309, [3, -0.626667, 0], [3, 0, 0]]])

    names.append("LWristYaw")
    times.append([0.96, 3.24, 6.16, 8.04])
    keys.append([[0.118076, [3, -0.333333, 0], [3, 0.76, 0]], [0.118076, [3, -0.76, 0], [3, 0.973333, 0]], [0.118076, [3, -0.973333, 0], [3, 0.626667, 0]], [0.118076, [3, -0.626667, 0], [3, 0, 0]]])

    names.append("RAnklePitch")
    times.append([0.96, 3.24, 6.16, 8.04])
    keys.append([[0.093616, [3, -0.333333, 0], [3, 0.76, 0]], [0.092082, [3, -0.76, 0], [3, 0.973333, 0]], [0.092082, [3, -0.973333, 0], [3, 0.626667, 0]], [0.093616, [3, -0.626667, 0], [3, 0, 0]]])

    names.append("RAnkleRoll")
    times.append([0.96, 3.24, 6.16, 8.04])
    keys.append([[0.113558, [3, -0.333333, 0], [3, 0.76, 0]], [0.113558, [3, -0.76, 0], [3, 0.973333, 0]], [0.113558, [3, -0.973333, 0], [3, 0.626667, 0]], [0.113558, [3, -0.626667, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append([0.96, 3.24, 6.16, 8.04])
    keys.append([[0.421892, [3, -0.333333, 0], [3, 0.76, 0]], [0.127364, [3, -0.76, 0], [3, 0.973333, 0]], [0.127364, [3, -0.973333, 0], [3, 0.626667, 0]], [0.421891, [3, -0.626667, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append([0.96, 3.24, 6.16, 8.04])
    keys.append([[1.18421, [3, -0.333333, 0], [3, 0.76, 0]], [0.435614, [3, -0.76, 0], [3, 0.973333, 0]], [0.435614, [3, -0.973333, 0], [3, 0.626667, 0]], [1.18421, [3, -0.626667, 0], [3, 0, 0]]])

    names.append("RHand")
    times.append([0.96, 3.24, 6.16, 8.04])
    keys.append([[0.288, [3, -0.333333, 0], [3, 0.76, 0]], [0.174, [3, -0.76, 0], [3, 0.973333, 0]], [0.9964, [3, -0.973333, 0], [3, 0.626667, 0]], [0.288, [3, -0.626667, 0], [3, 0, 0]]])

    names.append("RHipPitch")
    times.append([0.96, 3.24, 6.16, 8.04])
    keys.append([[0.12728, [3, -0.333333, 0], [3, 0.76, 0]], [0.12728, [3, -0.76, 0], [3, 0.973333, 0]], [0.12728, [3, -0.973333, 0], [3, 0.626667, 0]], [0.12728, [3, -0.626667, 0], [3, 0, 0]]])

    names.append("RHipRoll")
    times.append([0.96, 3.24, 6.16, 8.04])
    keys.append([[-0.116542, [3, -0.333333, 0], [3, 0.76, 0]], [-0.116542, [3, -0.76, 0], [3, 0.973333, 0]], [-0.116542, [3, -0.973333, 0], [3, 0.626667, 0]], [-0.116542, [3, -0.626667, 0], [3, 0, 0]]])

    names.append("RHipYawPitch")
    times.append([0.96, 3.24, 6.16, 8.04])
    keys.append([[-0.171766, [3, -0.333333, 0], [3, 0.76, 0]], [-0.171766, [3, -0.76, 0], [3, 0.973333, 0]], [-0.171766, [3, -0.973333, 0], [3, 0.626667, 0]], [-0.171766, [3, -0.626667, 0], [3, 0, 0]]])

    names.append("RKneePitch")
    times.append([0.96, 3.24, 6.16, 8.04])
    keys.append([[-0.099668, [3, -0.333333, 0], [3, 0.76, 0]], [-0.099668, [3, -0.76, 0], [3, 0.973333, 0]], [-0.099668, [3, -0.973333, 0], [3, 0.626667, 0]], [-0.0923279, [3, -0.626667, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append([0.96, 3.24, 6.16, 8.04])
    keys.append([[1.42359, [3, -0.333333, 0], [3, 0.76, 0]], [0.04913, [3, -0.76, 0.0179667], [3, 0.973333, -0.02301]], [0.0261199, [3, -0.973333, 0], [3, 0.626667, 0]], [1.42359, [3, -0.626667, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append([0.96, 3.24, 6.16, 8.04])
    keys.append([[-0.199462, [3, -0.333333, 0], [3, 0.76, 0]], [0.24233, [3, -0.76, 0], [3, 0.973333, 0]], [0.24233, [3, -0.973333, 0], [3, 0.626667, 0]], [-0.199461, [3, -0.626667, 0], [3, 0, 0]]])

    names.append("RWristYaw")
    times.append([0.96, 3.24, 6.16, 8.04])
    keys.append([[0.082794, [3, -0.333333, 0], [3, 0.76, 0]], [-0.339056, [3, -0.76, 0], [3, 0.973333, 0]], [-0.339056, [3, -0.973333, 0], [3, 0.626667, 0]], [0.0827939, [3, -0.626667, 0], [3, 0, 0]]])

    motion_service = session.service("ALMotion")

    try:
        motion_service.angleInterpolationBezier(names, times, keys)
    except Exception as e:
        print("Error occurred during grasp motion: ", e)

def grasp_ground_actions(session):
    """
    让机器人执行一系列动作：坐下、抓球、站起来
    """
    # 让机器人坐下
    make_nao_sit(session)

    # 让机器人抓球
    make_nao_grasp(session)

    # 让机器人站起来
    make_nao_stand(session)


if __name__ == "__main__":
    # 初始化 qi.Session 并连接到 NAOqi 实例
    session = qi.Session()
    try:
        session.connect("tcp://172.20.10.9:9559")
        print("成功连接到 NAO 机器人")
    except RuntimeError as e:
        print(f"无法连接到 NAO 机器人: {e}")
        sys.exit(1)
    SERVER_PORT = 12345

    # # Make the robot sit
    # make_nao_sit(session)

    # # Make the robot grasp
    # make_nao_grasp(session)

    # # Make the robot stand
    # make_nao_stand(session)

    grasp_ground_actions(session)

    